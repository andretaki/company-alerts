# .env.example

# --- Server Configuration ---
# Port the server listens on
PORT=8080
# Comma-separated list of tokens allowed for API calls and WebSocket connections
# Generate strong random tokens for production!
ALLOWED_TOKENS=secret-token-1,another-secret-token
# Connection string for the PostgreSQL database
# Example: postgres://user:password@host:port/database?sslmode=disable
DATABASE_URL=postgres://user:password@localhost:5432/alerts_db?sslmode=disable
# Directory to serve static files from (optional)
STATIC_DIR=./static
# Set to "true" to add sample data on server startup (for development)
ADD_TEST_DATA=true

# --- Client Configuration ---
# URL of the alerts server API/WebSocket endpoint
ALERTS_SERVER_URL=http://localhost:8080
# Token the client uses to authenticate with the server (must be in ALLOWED_TOKENS)
ALERTS_CLIENT_TOKEN=secret-token-1
# Use WebSocket (true) or HTTP Polling (false) for receiving alerts
ALERTS_USE_WEBSOCKET=true
# Interval in seconds for HTTP polling (if ALERTS_USE_WEBSOCKET=false)
ALERTS_POLL_INTERVAL_SECONDS=30
# Minimum severity level for an alert to be shown/notified (e.g., 1=Low+, 2=Medium+, 4=Critical only)
ALERTS_MIN_SEVERITY=1
# Comma-separated list of alert types to notify about (case-insensitive). Empty means all types.
# Example: ALERTS_NOTIFY_TYPES=complaint,order_error,security
ALERTS_NOTIFY_TYPES=
# Optional: Limit for history view fetch from API
# ALERTS_HISTORY_FETCH_LIMIT=50

# --- Go/System Specific ---
# Optional: Set log level, etc.
# GODEBUG=...